<div data-darkreader-inline-bgcolor="" data-darkreader-inline-bgimage="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="" data-darkreader-inline-border-right="" data-darkreader-inline-border-top="" style="background: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); padding: 5px 10px; --darkreader-inline-bgimage: initial; --darkreader-inline-bgcolor:#2e2d2a; --darkreader-inline-border-top:#494843; --darkreader-inline-border-right:#494843; --darkreader-inline-border-bottom:#494843; --darkreader-inline-border-left:#494843;">
<pre>
<strong><span dir="rtl"><cite>                                                                                   WOE - AZIMA INTEGRATION</cite></span>
</strong></pre>
</div>

<h2><strong>WOE </strong></h2>

<h2><strong>Ondemand :</strong></h2>

<p><strong><a href="https://imgbb.com/"><img alt="WIN-20200508-16-11-02-Pro-2" src="https://i.ibb.co/pZ7jtCY/WIN-20200508-16-11-02-Pro-2.jpg" style="height:218px; width:411px" /></a></strong></p>

<p>The endpoint in ondemand&nbsp; gets the asset details from tsdb apm and with that fetches azima data&nbsp; from azima api then return back&nbsp;</p>

<p><big><strong>CREDENTIALS (for connecting with azima)&nbsp;: </strong></big></p>

<p>SAAIDI_URI&nbsp; :&nbsp; &nbsp;<a href="https://devweb.wptss.com/saaidi/swagger/index.html" target="_blank">https://devweb.wptss.com/saaidi/swagger/index.html</a><br />
<a href="https://azdevweb.wptss.com/saaidi/swagger/index.html">https://azdevweb.wptss.com/saaidi/swagger/index.html</a><br />
SAAIDI_USER: dba&nbsp;&nbsp;<br />
SAAIDI_PASSWORD: vibration</p>

<p>EUREKA_SDK_CREDENTIALS: &#39;eydBdXRoUmVxdWVzdCc6IHsnYXV0aF91cmwnOiAnaHR0cHM6Ly9hdXRoLnN5bXBob255aW5kYWkuY29tJywgJ3Jlc291cmNlX3VybCc6ICdodHRwOi8vbG9jYWxob3N0OjE2MDAwLycsICdjbGllbnRfaWQnOiAnZWFjMzlkZWItYjQzNi00YjA3LTlhMzktYjQxNDg1M2JkMjI0JywgJ2NsaWVudF9zZWNyZXQnOiAnRG5YOWVRaU5JTlBKbzZNZExPSlgyOU5xSEdiZHdIMVQnLCAndXNlcm5hbWUnOiAnYXppbWEnLCAncGFzc3dvcmQnOiAnc2lhaTEyMzQnLCAncmVkaXJlY3RfdXJsJzogJyd9fQ==&#39;<br />
&nbsp;</p>

<p>temporary :&nbsp;</p>

<p>tenant_id for customer_id 100 is</p>

<pre>
7dc071e1-3fd5-4620-8f73-099a59e40281</pre>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><strong>docker-compose :</strong></p>

<p>MASTER_API_KEY:</p>

<p>hnryPlKZv9itGFxAtNmlw6yzWm2bkSz1-zSZ44QDUZs</p>

<p>&nbsp;</p>

<p>lambda :<br />
1ddd396e-1e6f-4dc8-bc98-b08325f53aa6</p>

<p>&nbsp;</p>

<h1>GET watchman users inside Eureka&nbsp;platform :</h1>

<p>1 ) put the connection string in&nbsp; config.yaml<br />
TASK_QUEUE_SEND_CONNECTION_STRING: &quot;Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send_listen;SharedAccessKey=52eMK+9/DcZifdgZhWcW5HxkY1fJFjMJqlt0AVkJKZQ=;EntityPath=topic-test&quot;<br />
TASK_QUEUE_LISTEN_CONNECTION_STRING: &quot;Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send_listen;SharedAccessKey=52eMK+9/DcZifdgZhWcW5HxkY1fJFjMJqlt0AVkJKZQ=;EntityPath=topic-test&quot;</p>

<p>2) change the config_file_path to the required pipline yaml file in <strong>main.py</strong></p>

<p>3 )&nbsp; run server.py&nbsp;<br />
4) run task_executor.py<br />
5 ) insert a user or initiate bulk import from postman only<br />
<br />
&nbsp;</p>

<p>&nbsp;</p>

<hr />
<hr />
<h2><strong>Auth Server Project :</strong><br />
&nbsp;</h2>

<h3>Auth server project is a medium&nbsp;to connect to the fusion auth server running at localhost:16000<br />
for managing&nbsp; <strong><em>tenants,</em></strong> <strong><em>applications,</em></strong> <strong><em>users,&nbsp;super user, generatng access tokens<br />
<br />
Example:<br />
To generate logn token&nbsp;</em></strong></h3>

<p><em>URL:</em></p>

<p>http://localhost/api/auth/token<br />
<strong>REQUEST BODY:&nbsp;</strong><br />
<strong>{<br />
&nbsp;&nbsp; &nbsp;&quot;grant_type&quot;:&quot;password&quot;,<br />
&nbsp;&nbsp; &nbsp;&quot;username&quot;:&quot;super-user&quot;,<br />
&nbsp;&nbsp; &nbsp;&quot;password&quot;:&quot;siaipass1234&quot;,<br />
&nbsp; &nbsp; &quot;client_id&quot;:&quot;b4ea82d9-caf1-4e38-b24b-04650875d78f&quot;,<br />
&nbsp;&nbsp; &nbsp;&quot;client_secret&quot;:&quot;r5Lc6czwNliI00TyEiz8EycPLLYUjN6vH_Ak420HE9Q&quot;<br />
}</strong><br />
<strong><em>------------------------------------------------------</em></strong></p>

<pre>
&quot;&quot;&quot; use
docker-compose down
and 
docker-compose up 
for restarting the fusion auth
donot terminate it &quot;&quot;&quot;


current  <strong>master-api-key </strong>:   KLLT2NA9QzH4kwnt_KMYTLg4CKl9LiFTc6XixK5S31w


These are the credentials used in <big><strong>src/rest/config.py to connect to fusion auth</strong></big>
AUTH_HOST_INTERNAL=http://localhost:19011            #host:port of fusion auth
AUTH_HOST_EXTERNAL=http://localhost:19011
AUTH_SERVER_APP_ID=Nothing                           #if we wanto connect to an application inside fusion auth               
AUTH_API_KEY=master-api-key                          #master_api_key for generated in each time we start the fusion auth server</pre>

<p>STATIC_PATH = os.environ.get(&quot;STATIC_PATH&quot;, &quot;/app&quot;)</p>

<p>&nbsp;</p>

<p><strong>current Docker image:</strong></p>

<p>image: timeli/auth-server:20-0501-0328</p>

<hr />
<hr />
<h2><strong>Log Channels :</strong><br />
<br />
<br />
<br />
&nbsp;</h2>

<hr />
<hr />
<h2><strong>Sdks :</strong></h2>

<p>its a set of library modules for calling different MS routes</p>

<p>&nbsp;</p>

<p>credentials for connectinfg to auth server :&nbsp;</p>

<p>AuthRequest:<br />
&nbsp; auth_url: &quot;https://auth.symphonyindai.com&quot;<br />
&nbsp; resource_url: &quot;http://localhost:16000&quot;<br />
&nbsp; client_id: &quot;eac39deb-b436-4b07-9a39-b414853bd224&quot;<br />
&nbsp; client_secret: &quot;DnX9eQiNINPJo6MdLOJX29NqHGbdwH1T&quot;<br />
&nbsp; username: &quot;azima&quot;<br />
&nbsp; password: &quot;siai1234&quot;<br />
&nbsp; redirect_url: &#39;&#39;</p>

<p>MasterApiKey:<br />
&nbsp; key: &quot;qsy7monu8secD7kPzV4ZEvgkbDLyAEjS6Q8n9pS3gLM&quot;</p>

<hr />
<hr />
<h2>Tsdb-apm :</h2>

<ul>
	<li>Used for asset operations</li>
	<li>Ingesting measurements</li>
</ul>

<p><big><strong>DB-Connection :</strong></big></p>

<p>currently db_config.yaml value is taken for active db as of may 13,2020<br />
previously config.override.yaml value is taken</p>

<p>docker-compose up -d timescale-db</p>

<p><br />
<big><strong>Redis cache :</strong></big></p>

<p>docker-compose up -d redis<br />
&nbsp;</p>

<h3><strong><big>Note :&nbsp;(problems faced previously)</big></strong></h3>

<p>if the tsdb-server does not start&nbsp;<br />
do docker-compose down for timescale-db and up .</p>

<p>if tsdb-server not started then delete the existing tsdb compose data in volume list.[warning if deleted all previous dbs will be&nbsp;deleted]<br />
&nbsp;</p>

<hr />
<hr />
<h2><strong>Data-store-connectors:&nbsp;</strong></h2>

<p>&nbsp;</p>

<p>send connection string :</p>

<p>&nbsp;&quot;Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send;SharedAccessKey=+6fBVaxz/1WLEeeg/5bTZCWUxXrDWnwfiGIb+glraqc=;EntityPath=topic-sakthi&quot;<br />
<br />
receive connection string:&nbsp;</p>

<p>Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=listen;SharedAccessKey=MtibW/kUwOit3VwLxZ916ZTmpB/yBAXGvy4o4z7xem8=;EntityPath=topic-sakthi</p>

<hr />
<hr />
<h3><strong>WOE docker-compose :</strong><br />
create super user :</h3>

<h3><strong>PUT :&nbsp; &nbsp;http://localhost:16000/api/auth/tenant/user/create-super-user</strong></h3>

<p>{<br />
&nbsp; &nbsp; &quot;email&quot;: &quot;prasath@symphonyai.com&quot;,<br />
&nbsp; &nbsp; &quot;password&quot;: &quot;siaipass1234&quot;<br />
}</p>

<h2>output :&nbsp;</h2>

<h2><strong>user &#39;s credentials :&nbsp;</strong></h2>

<p>{</p>

<p>&nbsp;&nbsp;&quot;internal_app&quot;:&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;client_id&quot;:&nbsp;&quot;b4ea82d9-caf1-4e38-b24b-04650875d78f&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;client_secret&quot;:&nbsp;&quot;r5Lc6czwNliI00TyEiz8EycPLLYUjN6vH_Ak420HE9Q&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;domain&quot;:&nbsp;&quot;auth.symphonyindai.com&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;&quot;b4ea82d9-caf1-4e38-b24b-04650875d78f&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;APM&nbsp;Internal&nbsp;Apps&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;redirect_urls&quot;:&nbsp;[</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;https://auth.symphonyindai.com/redirect&quot;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;],</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;tenant_id&quot;:&nbsp;&quot;adc6c8c2-be14-4482-9b79-d5c4e562c48b&quot;</p>

<p>&nbsp;&nbsp;},</p>

<p>&nbsp;&nbsp;&quot;super_user&quot;:&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;email&quot;:&nbsp;&quot;prasath@symphonyai.com&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;&quot;beca98ed-975d-4ff7-80cf-43547f9fff7d&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;password&quot;:&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;super_user&quot;:&nbsp;false,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;tenant_id&quot;:&nbsp;&quot;adc6c8c2-be14-4482-9b79-d5c4e562c48b&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;user_name&quot;:&nbsp;&quot;super-user&quot;</p>

<p>&nbsp;&nbsp;}</p>

<p>}</p>

<hr />
<h2>tenants credentials :&nbsp;</h2>

<p>{</p>

<p>&nbsp;&nbsp;&quot;application&quot;:&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;client_id&quot;:&nbsp;&quot;92eba166-c6e1-4d4b-9a34-0c7750a6c0f6&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;client_secret&quot;:&nbsp;&quot;CkHMcf-2A_u01viArVlkggydqG9Vimk5AotL425iuI4&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;domain&quot;:&nbsp;&quot;localhost.azima&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;&quot;92eba166-c6e1-4d4b-9a34-0c7750a6c0f6&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;azima-apm&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;redirect_urls&quot;:&nbsp;[</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;https://localhost.azima/api/auth/redirect&quot;</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;],</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;tenant_id&quot;:&nbsp;&quot;83849e93-922a-4f2f-82b0-aecf90c8348d&quot;</p>

<p>&nbsp;&nbsp;},</p>

<p>&nbsp;&nbsp;&quot;tenant&quot;:&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;data_base&quot;:&nbsp;&quot;azima_db&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;&quot;83849e93-922a-4f2f-82b0-aecf90c8348d&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;&quot;azima&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;schema_name&quot;:&nbsp;&quot;azima&quot;</p>

<p>&nbsp;&nbsp;},</p>

<p>&nbsp;&nbsp;&quot;user&quot;:&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;email&quot;:&nbsp;&quot;prasath@symphonyai.com&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;id&quot;:&nbsp;&quot;a2527b31-6fbe-4ffd-89d5-d984af29a98f&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;name&quot;:&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;password&quot;:&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;super_user&quot;:&nbsp;false,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;tenant_id&quot;:&nbsp;&quot;83849e93-922a-4f2f-82b0-aecf90c8348d&quot;,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&quot;user_name&quot;:&nbsp;&quot;super-user&quot;</p>

<p>&nbsp;&nbsp;}</p>

<p>}</p>

<hr />
<hr />
<h2>GET Authentication bearer token :&nbsp;</h2>

<p>http://localhost/api/auth/token</p>

<p>{<br />
&nbsp;&nbsp; &nbsp;&quot;grant_type&quot;:&quot;password&quot;,<br />
&nbsp;&nbsp; &nbsp;&quot;username&quot;:&quot;super-user&quot;,<br />
&nbsp;&nbsp; &nbsp;&quot;password&quot;:&quot;siaipass1234&quot;,<br />
&nbsp; &nbsp; &quot;client_id&quot;:&quot;b4ea82d9-caf1-4e38-b24b-04650875d78f&quot;,<br />
&nbsp;&nbsp; &nbsp;&quot;client_secret&quot;:&quot;r5Lc6czwNliI00TyEiz8EycPLLYUjN6vH_Ak420HE9Q&quot;<br />
}<br />
<br />
&nbsp;</p>

<hr />
<hr />
<h2><strong>common set up :</strong></h2>

<p>for the first time downloadig the dependencies (only in virtual environment)</p>

<p>sudo pip3 install virtualenvwrapper</p>

<p>open the .bashrc file and insert the below two linea at last<br />
&nbsp;&nbsp; &nbsp;export WORKON_HOME=~/virtualenvs<br />
&nbsp;&nbsp; &nbsp;source /usr/local/bin/virtualenvwrapper.sh</p>

<p>create the virtual environement<br />
mkvirtualenv -p /usr/local/bin/python3.6 tsdb-apm(name of the virtual environment)</p>

<p><br />
switch to the required virtual environment<br />
workon tsdb-apm</p>

<p>to exit from the current virtual environment<br />
deactivate</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><br />
create a file name pip.conf in tsdb-apm and paste the following&nbsp;</p>

<p>[global]<br />
index-url = https://keshav:Pa55word@123@symphonyai.jfrog.io/symphonyai/api/pypi/timeli-python/simple/</p>

<p>execute the commands&nbsp;<br />
&nbsp; &nbsp; export PIP_CONFIG_FILE=pip.conf<br />
&nbsp; &nbsp; pip install -r requirements.txt --extra-index-url https://pypi.python.org/simple</p>

<p>&nbsp;</p>

<hr />
<hr />
<p>&nbsp;</p>
