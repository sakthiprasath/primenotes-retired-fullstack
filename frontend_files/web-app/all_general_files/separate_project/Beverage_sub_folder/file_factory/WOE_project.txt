<div style="--darkreader-inline-bgcolor:#302e2b; --darkreader-inline-bgimage: initial; --darkreader-inline-border-bottom:#4c4b46; --darkreader-inline-border-left:#4c4b46; --darkreader-inline-border-right:#4c4b46; --darkreader-inline-border-top:#4c4b46; background: rgb(238, 238, 238); border: 1px solid rgb(204, 204, 204); padding: 5px 10px;" data-darkreader-inline-bgimage="" data-darkreader-inline-bgcolor="" data-darkreader-inline-border-top="" data-darkreader-inline-border-right="" data-darkreader-inline-border-bottom="" data-darkreader-inline-border-left="">
<h1><strong><span dir="rtl"><cite>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;WOE - AZIMA INTEGRATION</cite></span></strong></h1>
</div>

<h2><strong>WOE</strong></h2>

<h2><strong>Ondemand :</strong></h2>

<p><strong><a href="https://imgbb.com/"><img alt="WIN-20200508-16-11-02-Pro-2" src="https://i.ibb.co/pZ7jtCY/WIN-20200508-16-11-02-Pro-2.jpg" style="height:218px; width:411px"></a></strong></p>

<p>The endpoint in ondemand&nbsp; gets the asset details from tsdb apm and with that fetches azima data&nbsp; from azima api then return back&nbsp;</p>

<p><big><strong>CREDENTIALS (for connecting with azima)&nbsp;: </strong></big></p>

<p>SAAIDI_URI&nbsp; :&nbsp; &nbsp;<a href="https://devweb.wptss.com/saaidi/swagger/index.html" target="_blank">https://devweb.wptss.com/saaidi/swagger/index.html</a><br>
<a href="https://azdevweb.wptss.com/saaidi/swagger/index.html">https://azdevweb.wptss.com/saaidi/swagger/index.html</a><br>
SAAIDI_USER: dba&nbsp;&nbsp;<br>
SAAIDI_PASSWORD: vibration</p>

<p>EUREKA_SDK_CREDENTIALS: 'eydBdXRoUmVxdWVzdCc6IHsnYXV0aF91cmwnOiAnaHR0cHM6Ly9hdXRoLnN5bXBob255aW5kYWkuY29tJywgJ3Jlc291cmNlX3VybCc6ICdodHRwOi8vbG9jYWxob3N0OjE2MDAwLycsICdjbGllbnRfaWQnOiAnZWFjMzlkZWItYjQzNi00YjA3LTlhMzktYjQxNDg1M2JkMjI0JywgJ2NsaWVudF9zZWNyZXQnOiAnRG5YOWVRaU5JTlBKbzZNZExPSlgyOU5xSEdiZHdIMVQnLCAndXNlcm5hbWUnOiAnYXppbWEnLCAncGFzc3dvcmQnOiAnc2lhaTEyMzQnLCAncmVkaXJlY3RfdXJsJzogJyd9fQ=='<br>
&nbsp;</p>

<p>temporary :&nbsp;</p>

<p>tenant_id for customer_id 100 is</p>

<pre>7dc071e1-3fd5-4620-8f73-099a59e40281</pre>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><strong>docker-compose :</strong></p>

<p>MASTER_API_KEY:</p>

<p>hnryPlKZv9itGFxAtNmlw6yzWm2bkSz1-zSZ44QDUZs</p>

<p>&nbsp;</p>

<p>lambda :<br>
1ddd396e-1e6f-4dc8-bc98-b08325f53aa6</p>

<p>&nbsp;</p>

<h1>GET watchman users inside Eureka&nbsp;platform :</h1>

<p>1 ) put the connection string in&nbsp; config.yaml<br>
TASK_QUEUE_SEND_CONNECTION_STRING: "Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send_listen;SharedAccessKey=52eMK+9/DcZifdgZhWcW5HxkY1fJFjMJqlt0AVkJKZQ=;EntityPath=topic-test"<br>
TASK_QUEUE_LISTEN_CONNECTION_STRING: "Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send_listen;SharedAccessKey=52eMK+9/DcZifdgZhWcW5HxkY1fJFjMJqlt0AVkJKZQ=;EntityPath=topic-test"</p>

<p>2) change the config_file_path to the required pipline yaml file in <strong>main.py</strong></p>

<p>3 )&nbsp; run server.py&nbsp;<br>
4) run task_executor.py<br>
5 ) insert a user or initiate bulk import from postman only<br>
<br>
&nbsp;</p>

<p>&nbsp;</p>

<hr>
<hr>
<h2><strong>Auth Server Project :</strong><br>
&nbsp;</h2>

<h3>Auth server project is a medium&nbsp;to connect to the fusion auth server running at localhost:16000<br>
for managing&nbsp; <strong><em>tenants,</em></strong> <strong><em>applications,</em></strong> <strong><em>users,&nbsp;super user, generatng access tokens<br>
<br>
Example:<br>
To generate logn token&nbsp;</em></strong></h3>

<p><em>URL:</em></p>

<p>http://localhost/api/auth/token<br>
<strong>REQUEST BODY:&nbsp;</strong><br>
<strong>{<br>
&nbsp;&nbsp; &nbsp;"grant_type":"password",<br>
&nbsp;&nbsp; &nbsp;"username":"super-user",<br>
&nbsp;&nbsp; &nbsp;"password":"siaipass1234",<br>
&nbsp; &nbsp; "client_id":"client id of APM Internal&nbsp; application in fusion auth portal",<br>
&nbsp;&nbsp; &nbsp;"client_secret":"client secret of APM Internal in fusion auth portal"<br>
}</strong></p>

<p><strong><em>------------------------------------------------------------------------------------------------------------</em></strong></p>

<pre>""" use
docker-compose down
and 
docker-compose up 
for restarting the fusion auth
donot terminate it """


current  <strong>master-api-key </strong>:   hnryPlKZv9itGFxAtNmlw6yzWm2bkSz1-zSZ44QDUZs


These are the credentials used in <big><strong>src/rest/config.py to connect to fusion auth</strong></big>
AUTH_HOST_INTERNAL=http://localhost:19011            #host:port of fusion auth
AUTH_HOST_EXTERNAL=http://localhost:19011
AUTH_SERVER_APP_ID=Nothing                           #if we wanto connect to an application inside fusion auth               
AUTH_API_KEY=master-api-key                          #master_api_key for the fusion auth server</pre>

<p>STATIC_PATH = os.environ.get("STATIC_PATH", "/app")</p>

<hr>
<hr>
<h2><u><strong>Gunicorn server start :&nbsp;</strong></u></h2>

<blockquote>
<p><strong>Dockerfile :&nbsp;</strong>&nbsp;</p>

<p>FROM base</p>

<p>COPY src /app<br>
COPY run_with_gunicorn.sh /app</p>

<p>CMD [ "/app/run_with_gunicorn.sh" ]</p>
</blockquote>

<p>&nbsp;</p>

<p>&nbsp; <strong>run_with_gunicorn.sh :</strong></p>

<blockquote>
<p>#!/usr/bin/env bash<br>
# References:<br>
# - http://docs.gunicorn.org/en/stable/settings.html#worker-class<br>
# - http://docs.gunicorn.org/en/stable/settings.html#access-log-format</p>

<p>gunicorn auth_server:app \<br>
&nbsp;--bind 0.0.0.0:16000 \<br>
&nbsp;--backlog 100 \<br>
&nbsp;--workers 1 \<br>
&nbsp;--threads 5 \<br>
&nbsp;--worker-class eventlet \<br>
&nbsp;--access-logfile '-' \<br>
&nbsp;--access-logformat '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %({host}i)s %(D)s'<br>
&nbsp;</p>
</blockquote>

<p><strong>.env file :</strong><br>
&nbsp; &nbsp;add the following</p>

<blockquote>
<p>AUTH_HOST_INTERNAL=http://localhost:19011<br>
AUTH_HOST_EXTERNAL=http://localhost:19011<br>
AUTH_SERVER_APP_ID=9e77864d-3bbd-4111-ac67-2fa00cfdb739</p>
</blockquote>

<hr>
<hr>
<h2><strong>Log Channels :</strong><br>
<br>
<br>
<br>
&nbsp;</h2>

<hr>
<hr>
<h1><strong>Sdks :</strong></h1>

<p>its a set of library modules for calling different MS routes</p>

<p>&nbsp;</p>

<p>credentials for connectinfg to auth server :&nbsp;</p>

<p>AuthRequest:<br>
&nbsp; auth_url: "http://localhost:16000"<br>
&nbsp; resource_url: "http://localhost:16000"<br>
&nbsp; client_id: "b4ea82d9-caf1-4e38-b24b-04650875d78f"<br>
&nbsp; client_secret: "r5Lc6czwNliI00TyEiz8EycPLLYUjN6vH_Ak420HE9Q"<br>
&nbsp; username: "super-user"<br>
&nbsp; password: "siai1234"<br>
&nbsp; redirect_url: ''</p>

<p>MasterApiKey:<br>
&nbsp; key: "hnryPlKZv9itGFxAtNmlw6yzWm2bkSz1-zSZ44QDUZs"</p>

<hr>
<hr>
<h1><strong>Tsdb-apm :</strong></h1>

<ul>
	<li>Used for asset operations</li>
	<li>Ingesting measurements</li>
</ul>

<p><big><strong>DB-Connection :</strong></big></p>

<p>currently db_config.yaml value is taken for active db as of may 13,2020<br>
previously config.override.yaml value is taken</p>

<p>docker-compose up -d timescale-db</p>

<p><br>
<big><strong>Redis cache :</strong></big></p>

<p>docker-compose up -d redis<br>
&nbsp;</p>

<h3><strong><big>Note :&nbsp;(problems faced previously)</big></strong></h3>

<p>if the tsdb-server does not start&nbsp;<br>
do docker-compose down for timescale-db and up .</p>

<p>if tsdb-server not started then delete the existing tsdb compose data in volume list.[warning if deleted all previous dbs will be&nbsp;deleted]<br>
&nbsp;</p>

<hr>
<hr>
<h1><strong>Data-store-connectors:&nbsp;</strong></h1>

<p><strong>send connection string :</strong></p>

<p>Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send;SharedAccessKey=+6fBVaxz/1WLEeeg/5bTZCWUxXrDWnwfiGIb+glraqc=;EntityPath=topic-sakthi<br>
<br>
<strong>receive connection string:&nbsp;</strong></p>

<p>Endpoint=sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=listen;SharedAccessKey=MtibW/kUwOit3VwLxZ916ZTmpB/yBAXGvy4o4z7xem8=;EntityPath=topic-sakthi</p>

<p>&nbsp;</p>

<p>metadata connection string&nbsp;</p>

<p><strong>send :</strong></p>

<p><code>Endpoint=</code><code><a href="sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send;SharedAccessKey=uwmn9iNBH2WqRn/hvCvdL7qVEwzPeWPiEVVtysY8/vg=;EntityPath=metadata-test" rel="noopener noreferrer" target="_blank">sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=send;SharedAccessKey=uwmn9iNBH2WqRn/hvCvdL7qVEwzPeWPiEVVtysY8/vg=;EntityPath=metadata-test</a></code></p>

<p><strong>Receive :&nbsp;</strong></p>

<p><code>Endpoint=</code><code><a href="sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=listen;SharedAccessKey=+kRcVRiwVjuPKLXTG1QQIXf8hSaimr+Ar8HeEsvRnTI=;EntityPath=metadata-test" rel="noopener noreferrer" target="_blank">sb://siai-eventhubs-test.servicebus.windows.net/;SharedAccessKeyName=listen;SharedAccessKey=+kRcVRiwVjuPKLXTG1QQIXf8hSaimr+Ar8HeEsvRnTI=;EntityPath=metadata-test</a></code></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<hr>
<hr>
<h3><strong>WOE docker-compose :</strong><br>
create super user :</h3>

<h3><strong>PUT :&nbsp; &nbsp;http://localhost:16000/api/auth/tenant/user/create-super-user</strong></h3>

<p>{<br>
&nbsp; &nbsp; "email": "prasath@symphonyai.com",<br>
&nbsp; &nbsp; "password": "siaipass1234"<br>
}</p>

<h2>output :&nbsp;</h2>

<h2><strong>user 's credentials :&nbsp;</strong></h2>

<p>{</p>

<p>&nbsp;&nbsp;"internal_app":&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"client_id":&nbsp;"b4ea82d9-caf1-4e38-b24b-04650875d78f",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"client_secret":&nbsp;"r5Lc6czwNliI00TyEiz8EycPLLYUjN6vH_Ak420HE9Q",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"domain":&nbsp;"auth.symphonyindai.com",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"id":&nbsp;"b4ea82d9-caf1-4e38-b24b-04650875d78f",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;"APM&nbsp;Internal&nbsp;Apps",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"redirect_urls":&nbsp;[</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"https://auth.symphonyindai.com/redirect"</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;],</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"tenant_id":&nbsp;"adc6c8c2-be14-4482-9b79-d5c4e562c48b"</p>

<p>&nbsp;&nbsp;},</p>

<p>&nbsp;&nbsp;"super_user":&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"email":&nbsp;"prasath@symphonyai.com",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"id":&nbsp;"beca98ed-975d-4ff7-80cf-43547f9fff7d",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"password":&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"super_user":&nbsp;false,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"tenant_id":&nbsp;"adc6c8c2-be14-4482-9b79-d5c4e562c48b",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"user_name":&nbsp;"super-user"</p>

<p>&nbsp;&nbsp;}</p>

<p>}</p>

<hr>
<h2>tenants credentials :&nbsp;</h2>

<p>{</p>

<p>&nbsp;&nbsp;"application":&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"client_id":&nbsp;"92eba166-c6e1-4d4b-9a34-0c7750a6c0f6",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"client_secret":&nbsp;"CkHMcf-2A_u01viArVlkggydqG9Vimk5AotL425iuI4",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"domain":&nbsp;"localhost.azima",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"id":&nbsp;"92eba166-c6e1-4d4b-9a34-0c7750a6c0f6",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;"azima-apm",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"redirect_urls":&nbsp;[</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"https://localhost.azima/api/auth/redirect"</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;],</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"tenant_id":&nbsp;"83849e93-922a-4f2f-82b0-aecf90c8348d"</p>

<p>&nbsp;&nbsp;},</p>

<p>&nbsp;&nbsp;"tenant":&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"data_base":&nbsp;"azima_db",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"id":&nbsp;"83849e93-922a-4f2f-82b0-aecf90c8348d",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;"azima",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"schema_name":&nbsp;"azima"</p>

<p>&nbsp;&nbsp;},</p>

<p>&nbsp;&nbsp;"user":&nbsp;{</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"email":&nbsp;"prasath@symphonyai.com",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"id":&nbsp;"a2527b31-6fbe-4ffd-89d5-d984af29a98f",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"name":&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"password":&nbsp;null,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"super_user":&nbsp;false,</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"tenant_id":&nbsp;"83849e93-922a-4f2f-82b0-aecf90c8348d",</p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;"user_name":&nbsp;"super-user"</p>

<p>&nbsp;&nbsp;}</p>

<p>}</p>

<hr>
<hr>
<h2>GET Authentication bearer token :&nbsp;</h2>

<p>http://localhost/api/auth/token</p>

<p>{<br>
&nbsp;&nbsp; &nbsp;"grant_type":"password",<br>
&nbsp;&nbsp; &nbsp;"username":"super-user",<br>
&nbsp;&nbsp; &nbsp;"password":"siaipass1234",<br>
&nbsp; &nbsp; "client_id":"b4ea82d9-caf1-4e38-b24b-04650875d78f",<br>
&nbsp;&nbsp; &nbsp;"client_secret":"r5Lc6czwNliI00TyEiz8EycPLLYUjN6vH_Ak420HE9Q"<br>
}</p>

<p>&nbsp;</p>

<p>currently :</p>

<p>{<br>
&nbsp;&nbsp; &nbsp;"grant_type":"password",<br>
&nbsp;&nbsp; &nbsp;"username":"sakthi",<br>
&nbsp;&nbsp; &nbsp;"password":"sakthics25",<br>
&nbsp;&nbsp; &nbsp;"client_id":"b4ea82d9-caf1-4e38-b24b-04650875d78f",<br>
&nbsp;&nbsp; &nbsp;"client_secret":"r5Lc6czwNliI00TyEiz8EycPLLYUjN6vH_Ak420HE9Q"<br>
}</p>

<h2><strong>For Staging-cluster :&nbsp;</strong></h2>

<pre><strong>URL </strong>-&nbsp;<a href="http://auth-staging.symphonyindai.com/" rel="noopener noreferrer" target="_blank">auth-staging.symphonyindai.com</a>
{
"client_id": "6d72602a-0a8c-4c44-9cdc-c49d2b5a8c9d"
"client_secret": "nC9VslpcOsJ-gCJK3w6aLJCwt3jrOi1yc8OfXaKU2RE"
"user_name": "super-user"
"password": "xh{s$7EdUqX&lt;$c5)"</pre>

<p>}</p>

<p><strong>Tenant_ids for the tenants </strong>:</p>

<pre>chemours - 64600517-b1c6-4a14-9eed-da478c1160e6
dow-chemical - 8f8123de-8ce9-4422-8afb-e3f132a124be</pre>

<p>&nbsp;</p>

<hr>
<hr>
<h2><strong>common set up :</strong></h2>

<p>for the first time downloadig the dependencies (only in virtual environment)</p>

<p>sudo pip3 install virtualenvwrapper</p>

<p>open the .bashrc file and insert the below two linea at last</p>

<blockquote>
<p>&nbsp; &nbsp; export WORKON_HOME=~/virtualenvs<br>
&nbsp;&nbsp; &nbsp;source /usr/local/bin/virtualenvwrapper.sh</p>
</blockquote>

<p>create the virtual environement</p>

<blockquote>
<p>mkvirtualenv -p /usr/local/bin/python3.6 tsdb-apm(name of the virtual environment)</p>
</blockquote>

<p><br>
switch to the required virtual environment</p>

<blockquote>
<p>workon tsdb-apm</p>
</blockquote>

<p>to exit from the current virtual environment</p>

<blockquote>
<p>deactivate</p>
</blockquote>

<p><br>
create a file name pip.conf in tsdb-apm and paste the following&nbsp;</p>

<blockquote>
<p>[global]<br>
index-url = https://keshav:Pa55word@123@symphonyai.jfrog.io/symphonyai/api/pypi/timeli-python/simple/</p>
</blockquote>

<p>execute the commands&nbsp;</p>

<blockquote>
<p>&nbsp; &nbsp; export PIP_CONFIG_FILE=pip.conf<br>
&nbsp; &nbsp; pip install -r requirements.txt --extra-index-url https://pypi.python.org/simple</p>
</blockquote>

<p>&nbsp;</p>

<hr>
<hr>
<p><span style="font-size:20px"><strong>ERRORS :&nbsp;</strong></span><br>
<strong>login manager.py : validate auth server access (401 error)</strong><br>
this issue is because of&nbsp;<br>
./env credentials<br>
check :<br>
app_id<br>
master apikey&nbsp;&nbsp;<br>
&nbsp;</p>

<hr>
<p>&nbsp;</p>
