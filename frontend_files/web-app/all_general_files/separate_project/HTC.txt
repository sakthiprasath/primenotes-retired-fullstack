Pro1000 library
https://codepen.io/sakthics25/project/editor/Degobe


<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<link rel="apple-touch-icon" type="image/png" href="https://static.codepen.io/assets/favicon/apple-touch-icon-5ae1a0698dcc2402e9712f7d01ed509a57814f994c660df9f7a952f3060705ee.png" />
<meta name="apple-mobile-web-app-title" content="CodePen">
<link rel="shortcut icon" type="image/x-icon" href="https://static.codepen.io/assets/favicon/favicon-aec34940fbc1a6e787974dcd360f2c6b63348d4b1f4e06c77743096d55480f33.ico" />
<link rel="mask-icon" type="" href="https://static.codepen.io/assets/favicon/logo-pin-8f3771b1072e3c38bd662872f6b673a722f4b3ca2421637d5596661b4e2132cc.svg" color="#111" />
<title>CodePen - A Pen by  sakthiprasath</title>
</head>
<body translate="no">
<!DOCTYPE html>
<html>
<head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.0/jquery.min.js"></script>
<script>
  
  class pro1000 extends HTMLElement{
  constructor(){
    super();
    this.init();
  }
 beforeOnReady(){return $.Deferred().resolve();};
 render(){return $.Deferred().resolve(); };
 afterOnReady(){return $.Deferred().resolve();};
 
    
    
  resolve(content){
   if (content != undefined){
     console.log('in contend resolve'  + content);
     return $.Deferred().resolve(content);
   } 
   else{
     console.log('in empty resolve1');
     return $.Deferred().resolve();
   }
 }
 
  HTML_GENERATOR(html_content, style_template_string){
    this.innerHTML = html_content;
    let style_ele = this._build_style_ele(style_template_string);
    this.appendChild(style_ele);
	  return $.Deferred().resolve();
  };
  
  _build_style_ele(style_template_string){
    const styleEle = document.createElement('style');
    styleEle.innerHTML = style_template_string;
    return styleEle;
  }
    
  
  
  init(){
    let self=this;
    self.beforeOnReady().then(function(def){
  		  self.render(def).then(function(def1){
        self.afterOnReady(def1);
 		    });
  	   });
    }
  }


  class DropDown extends pro1000{	
    beforeOnReady(){
      return this.resolve();
    }
    
    render(){
      let temp_var = 5;
      let html =`<div id='temp'>${temp_var}</div>`;
      return this.HTML_GENERATOR(html, this._create_style());
    }
      
    afterOnReady(){
      $('#temp').on('click',function(){
        	alert();
      });
    	return this.resolve();  
    }
    
    
    
    
    _create_style(){
      return `
              #temp{
                background-color: black;
                width:100px;
                height:100px;
                color:white;
               }
             `;
    }
  }
  
  $(function(){
  	customElements.define('drop-down',DropDown);
  });








</script>
</head>
<body>
<drop-down />
</body>
</html>
</body>
</html>
